# -*- mode: ruby -*-
# vi: set ft=ruby :

# This file was generated by SecGen
# <%= @time %>
# Based on <%= @scenario %>
<% require 'json'
   require 'base64'
   require 'securerandom' -%>

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
<% @systems.each do |system| %>
  config.vm.define "<%= system.name %>" do |<%= system.name %>|
    config.vm.provider :virtualbox do |vb|
<%  system.module_selections.each do |selected_module|
      if selected_module.module_type == 'base'
        @cpu_word_size = selected_module.attributes['cpu_word_size'].first.downcase
      end
    end -%>
<%= gui = (@options.has_key? :gui_output) ? 'true' : 'false'
      "      vb.gui = #{gui}\n" -%>
<%= no_pae = (@options.has_key? :nopae) ? 'off' : 'on'
      "      vb.customize ['modifyvm', :id, '--pae', '#{no_pae}']\n" -%>
<%= if @cpu_word_size == '32-bit'
      if @options.has_key? :hwvirtex
      "      vb.customize ['modifyvm', :id, '--hwvirtex', 'on']\n"
      else
      "      vb.customize ['modifyvm', :id, '--hwvirtex', 'off']\n"
      end
    elsif @cpu_word_size == '64-bit'
      "      vb.customize ['modifyvm', :id, '--hwvirtex', 'on']\n"
    end -%>
<%= vtxpid = (@options.has_key? :vtxvpid) ? 'on' : 'off'
      "      vb.customize ['modifyvm', :id, '--vtxvpid', '#{vtxpid}']\n"  -%>
<%= if @options.has_key? :memory_per_vm
      "      vb.memory = #{@options[:memory_per_vm]}\n"
    elsif @options.has_key? :total_memory
      "      vb.memory = #{@options[:total_memory]}/#{@systems.length}\n"
    end -%>
<%= if @options.has_key? :max_cpu_cores
      "      vb.cpus = #{@options[:max_cpu_cores]}\n"
    end -%>
<%= if @options.has_key? :max_cpu_usage
      "      vb.customize ['modifyvm', :id, '--cpuexecutioncap', '#{@options[:max_cpu_usage]}']\n"
    end -%>
    end

    # Optimise package caching (re-use downloaded .deb, ruby gems, etc)
#    if Vagrant.has_plugin?("vagrant-cachier")
      # Configure cached packages to be shared between instances of the same base box.
      # More info on http://fgrehm.viewdocs.io/vagrant-cachier/usage
#      config.cache.scope = :box
#    end

    # SecGen datastore
    # <%= JSON.generate($datastore) %>

    # SecGen modules
<% system.module_selections.each do |selected_module| -%>

<%= selected_module.to_s_comment -%>
<%   case selected_module.module_type
     when 'base' -%>
    <%= system.name %>.vm.box = "<%= selected_module.module_path_name %>"
    <%= system.name %>.vm.box_url = "<%= selected_module.attributes['url'].first %>"
    <% if selected_module.attributes['platform'].first.downcase == 'windows' %>
    <%= system.name %>.vm.communicator = 'winrm'
    <%= system.name %>.vm.guest = :windows
    <%= system.name %>.vm.network :forwarded_port, guest: 3389, host: 3389
    <%= system.name %>.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true
    <% end %>
<%   when 'network' -%>
<%     if selected_module.attributes['range'].first.nil? || selected_module.attributes['range'].first == "dhcp" -%>
    <%= system.name %>.vm.network :<%= selected_module.attributes['type'].first %>, type: "dhcp", auto_config: false
<%     else -%>
    <%= system.name %>.vm.network :<%= selected_module.attributes['type'].first %>, ip: "<%= resolve_network(selected_module.attributes['range'].first)%>"
<%     end -%>
<%   when 'vulnerability', 'service', 'utility', 'build' -%>
<%     module_name = selected_module.module_path_name -%>
    <%= system.name %>.vm.provision "puppet" do | <%=module_name%> |
<%     # if there are facter variables to define
      if selected_module.received_inputs != {} -%>
      <% json_inputs = JSON.generate(selected_module.received_inputs)
         b64_json_inputs = Base64.strict_encode64(json_inputs)
         # save the inputs in a random file in the project out directory secgen_functions module
         rand = SecureRandom.hex().to_s
         dir = "puppet/#{system.name}/modules/secgen_functions/files/json_inputs"
         FileUtils.mkdir_p(dir) unless File.exists?(dir)
         Print.debug "#{@out_dir}/#{dir}/#{rand}"
         File.write("#{@out_dir}/#{dir}/#{rand}", b64_json_inputs)
      -%>
<%=   module_name%>.facter = {
#        "base64_inputs" => '<%= b64_json_inputs %>',
        "base64_inputs_file" => '<%= rand %>',
      }
<%    end -%>
      <%=module_name%>.module_path = "<%="puppet/#{system.name}/modules"%>"
      <%=module_name%>.environment_path = "environments/"
      <%=module_name%>.environment = "production"
      <%=module_name%>.synced_folder_type = "rsync"
      <%=module_name%>.manifests_path = "<%="puppet/#{system.name}/modules/#{selected_module.module_path_end}"%>"
      <%=module_name%>.manifest_file = "<%="#{selected_module.module_path_end}.pp"%>"
    end
<%   end -%>
<% end -%>
  end
<% end %>
end
